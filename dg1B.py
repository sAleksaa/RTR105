Python 3.6.5 (default, Apr  1 2018, 05:46:30) 
[GCC 7.3.0] on linux
Type "copyright", "credits" or "license()" for more information.
>>> nano
Traceback (most recent call last):
  File "<pyshell#0>", line 1, in <module>
    nano
NameError: name 'nano' is not defined
>>> import sys
>>> sys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')
>>> from numpy import *
>>> vars()
{'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': <class '_frozen_importlib.BuiltinImporter'>, '__spec__': None, '__annotations__': {}, '__builtins__': <module 'builtins' (built-in)>, 'sys': <module 'sys' (built-in)>, 'add_newdocs': <module 'numpy.add_newdocs' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/add_newdocs.py'>, 'ModuleDeprecationWarning': <class 'numpy._globals.ModuleDeprecationWarning'>, 'VisibleDeprecationWarning': <class 'numpy._globals.VisibleDeprecationWarning'>, '__version__': '1.14.0', 'pkgload': <function pkgload at 0x7f68d62c67b8>, 'PackageLoader': <class 'numpy._import_tools.PackageLoader'>, 'show_config': <function show at 0x7f68d62bdd90>, 'char': <module 'numpy.core.defchararray' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/defchararray.py'>, 'rec': <module 'numpy.core.records' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/core/records.py'>, 'memmap': <class 'numpy.core.memmap.memmap'>, 'newaxis': None, 'ndarray': <class 'numpy.ndarray'>, 'flatiter': <class 'numpy.flatiter'>, 'nditer': <class 'numpy.nditer'>, 'nested_iters': <built-in function nested_iters>, 'ufunc': <class 'numpy.ufunc'>, 'arange': <built-in function arange>, 'array': <built-in function array>, 'zeros': <built-in function zeros>, 'count_nonzero': <function count_nonzero at 0x7f68d01249d8>, 'empty': <built-in function empty>, 'broadcast': <class 'numpy.broadcast'>, 'dtype': <class 'numpy.dtype'>, 'fromstring': <built-in function fromstring>, 'fromfile': <built-in function fromfile>, 'frombuffer': <built-in function frombuffer>, 'int_asbuffer': <built-in function int_asbuffer>, 'where': <built-in function where>, 'argwhere': <function argwhere at 0x7f68d0124d90>, 'copyto': <built-in function copyto>, 'concatenate': <built-in function concatenate>, 'fastCopyAndTranspose': <built-in function _fastCopyAndTranspose>, 'lexsort': <built-in function lexsort>, 'set_numeric_ops': <built-in function set_numeric_ops>, 'can_cast': <built-in function can_cast>, 'promote_types': <built-in function promote_types>, 'min_scalar_type': <built-in function min_scalar_type>, 'result_type': <built-in function result_type>, 'asarray': <function asarray at 0x7f68d0124a60>, 'asanyarray': <function asanyarray at 0x7f68d0124ae8>, 'ascontiguousarray': <function ascontiguousarray at 0x7f68d0124b70>, 'asfortranarray': <function asfortranarray at 0x7f68d0124bf8>, 'isfortran': <function isfortran at 0x7f68d0124d08>, 'empty_like': <built-in function empty_like>, 'zeros_like': <function zeros_like at 0x7f68d0124730>, 'ones_like': <function ones_like at 0x7f68d0124840>, 'correlate': <function correlate at 0x7f68d0124f28>, 'convolve': <function convolve at 0x7f68d00ae048>, 'inner': <built-in function inner>, 'dot': <built-in function dot>, 'outer': <function outer at 0x7f68d00ae0d0>, 'vdot': <built-in function vdot>, 'roll': <function roll at 0x7f68d00ae1e0>, 'rollaxis': <function rollaxis at 0x7f68d00ae268>, 'moveaxis': <function moveaxis at 0x7f68d00ae378>, 'cross': <function cross at 0x7f68d00ae488>, 'tensordot': <function tensordot at 0x7f68d00ae158>, 'little_endian': True, 'require': <function require at 0x7f68d0124c80>, 'fromiter': <built-in function fromiter>, 'array_equal': <function array_equal at 0x7f68d00aea60>, 'array_equiv': <function array_equiv at 0x7f68d00aeae8>, 'indices': <function indices at 0x7f68d00ae510>, 'fromfunction': <function fromfunction at 0x7f68d00ae598>, 'isclose': <function isclose at 0x7f68d00ae9d8>, 'load': <function load at 0x7f68cb34c0d0>, 'loads': <built-in function loads>, 'isscalar': <function isscalar at 0x7f68d00ae620>, 'binary_repr': <function binary_repr at 0x7f68d00ae6a8>, 'base_repr': <function base_repr at 0x7f68d00ae730>, 'ones': <function ones at 0x7f68d01247b8>, 'identity': <function identity at 0x7f68d00ae8c8>, 'allclose': <function allclose at 0x7f68d00ae950>, 'compare_chararrays': <built-in function compare_chararrays>, 'putmask': <built-in function putmask>, 'seterr': <function seterr at 0x7f68d00aeb70>, 'geterr': <function geterr at 0x7f68d00aebf8>, 'setbufsize': <function setbufsize at 0x7f68d00aec80>, 'getbufsize': <function getbufsize at 0x7f68d00aed08>, 'seterrcall': <function seterrcall at 0x7f68d00aed90>, 'geterrcall': <function geterrcall at 0x7f68d00aee18>, 'errstate': <class 'numpy.core.numeric.errstate'>, 'flatnonzero': <function flatnonzero at 0x7f68d0124e18>, 'Inf': inf, 'inf': inf, 'infty': inf, 'Infinity': inf, 'nan': nan, 'NaN': nan, 'False_': False, 'True_': True, 'bitwise_not': <ufunc 'invert'>, 'CLIP': 0, 'RAISE': 2, 'WRAP': 1, 'MAXDIMS': 32, 'BUFSIZE': 8192, 'ALLOW_THREADS': 1, 'ComplexWarning': <class 'numpy.core.numeric.ComplexWarning'>, 'full': <function full at 0x7f68d01248c8>, 'full_like': <function full_like at 0x7f68d0124950>, 'matmul': <built-in function matmul>, 'shares_memory': <built-in function shares_memory>, 'may_share_memory': <built-in function may_share_memory>, 'MAY_SHARE_BOUNDS': 0, 'MAY_SHARE_EXACT': -1, 'TooHardError': <class 'numpy.core._internal.TooHardError'>, 'AxisError': <class 'numpy.core._internal.AxisError'>, 'alen': <function alen at 0x7f68d00bdbf8>, 'all': <function all at 0x7f68d00bd8c8>, 'alltrue': <function alltrue at 0x7f68d00bd7b8>, 'amax': <function amax at 0x7f68d00bdae8>, 'amin': <function amin at 0x7f68d00bdb70>, 'any': <function any at 0x7f68d00bd840>, 'argmax': <function argmax at 0x7f68d00b0f28>, 'argmin': <function argmin at 0x7f68d00bd048>, 'argpartition': <function argpartition at 0x7f68d00b0d90>, 'argsort': <function argsort at 0x7f68d00b0ea0>, 'around': <function around at 0x7f68d00bdf28>, 'choose': <function choose at 0x7f68d00b0a60>, 'clip': <function clip at 0x7f68d00bd598>, 'compress': <function compress at 0x7f68d00bd510>, 'cumprod': <function cumprod at 0x7f68d00bdd08>, 'cumproduct': <function cumproduct at 0x7f68d00bd9d8>, 'cumsum': <function cumsum at 0x7f68d00bd950>, 'diagonal': <function diagonal at 0x7f68d00bd268>, 'mean': <function mean at 0x7f68d00be0d0>, 'ndim': <function ndim at 0x7f68d00bdd90>, 'nonzero': <function nonzero at 0x7f68d00bd400>, 'partition': <function partition at 0x7f68d00b0d08>, 'prod': <function prod at 0x7f68d00bdc80>, 'product': <function product at 0x7f68d00bd6a8>, 'ptp': <function ptp at 0x7f68d00bda60>, 'put': <function put at 0x7f68d00b0b70>, 'rank': <function rank at 0x7f68d00bde18>, 'ravel': <function ravel at 0x7f68d00bd378>, 'repeat': <function repeat at 0x7f68d00b0ae8>, 'reshape': <function reshape at 0x7f68d00b09d8>, 'resize': <function resize at 0x7f68d00bd158>, 'round_': <function round_ at 0x7f68d00be048>, 'searchsorted': <function searchsorted at 0x7f68d00bd0d0>, 'shape': <function shape at 0x7f68d00bd488>, 'size': <function size at 0x7f68d00bdea0>, 'sometrue': <function sometrue at 0x7f68d00bd730>, 'sort': <function sort at 0x7f68d00b0e18>, 'squeeze': <function squeeze at 0x7f68d00bd1e0>, 'std': <function std at 0x7f68d00be158>, 'sum': <function sum at 0x7f68d00bd620>, 'swapaxes': <function swapaxes at 0x7f68d00b0bf8>, 'take': <function take at 0x7f68d00b0950>, 'trace': <function trace at 0x7f68d00bd2f0>, 'transpose': <function transpose at 0x7f68d00b0c80>, 'var': <function var at 0x7f68d00be1e0>, 'frompyfunc': <built-in function frompyfunc>, 'seterrobj': <built-in function seterrobj>, 'geterrobj': <built-in function geterrobj>, 'absolute': <ufunc 'absolute'>, 'add': <ufunc 'add'>, 'arccos': <ufunc 'arccos'>, 'arccosh': <ufunc 'arccosh'>, 'arcsin': <ufunc 'arcsin'>, 'arcsinh': <ufunc 'arcsinh'>, 'arctan': <ufunc 'arctan'>, 'arctan2': <ufunc 'arctan2'>, 'arctanh': <ufunc 'arctanh'>, 'bitwise_and': <ufunc 'bitwise_and'>, 'bitwise_or': <ufunc 'bitwise_or'>, 'bitwise_xor': <ufunc 'bitwise_xor'>, 'cbrt': <ufunc 'cbrt'>, 'ceil': <ufunc 'ceil'>, 'conjugate': <ufunc 'conjugate'>, 'copysign': <ufunc 'copysign'>, 'cos': <ufunc 'cos'>, 'cosh': <ufunc 'cosh'>, 'deg2rad': <ufunc 'deg2rad'>, 'degrees': <ufunc 'degrees'>, 'divmod': <ufunc 'divmod'>, 'equal': <ufunc 'equal'>, 'exp': <ufunc 'exp'>, 'exp2': <ufunc 'exp2'>, 'expm1': <ufunc 'expm1'>, 'fabs': <ufunc 'fabs'>, 'float_power': <ufunc 'float_power'>, 'floor': <ufunc 'floor'>, 'floor_divide': <ufunc 'floor_divide'>, 'fmax': <ufunc 'fmax'>, 'fmin': <ufunc 'fmin'>, 'fmod': <ufunc 'fmod'>, 'frexp': <ufunc 'frexp'>, 'greater': <ufunc 'greater'>, 'greater_equal': <ufunc 'greater_equal'>, 'heaviside': <ufunc 'heaviside'>, 'hypot': <ufunc 'hypot'>, 'invert': <ufunc 'invert'>, 'isfinite': <ufunc 'isfinite'>, 'isinf': <ufunc 'isinf'>, 'isnan': <ufunc 'isnan'>, 'isnat': <ufunc 'isnat'>, 'ldexp': <ufunc 'ldexp'>, 'left_shift': <ufunc 'left_shift'>, 'less': <ufunc 'less'>, 'less_equal': <ufunc 'less_equal'>, 'log': <ufunc 'log'>, 'log10': <ufunc 'log10'>, 'log1p': <ufunc 'log1p'>, 'log2': <ufunc 'log2'>, 'logaddexp': <ufunc 'logaddexp'>, 'logaddexp2': <ufunc 'logaddexp2'>, 'logical_and': <ufunc 'logical_and'>, 'logical_not': <ufunc 'logical_not'>, 'logical_or': <ufunc 'logical_or'>, 'logical_xor': <ufunc 'logical_xor'>, 'maximum': <ufunc 'maximum'>, 'minimum': <ufunc 'minimum'>, 'modf': <ufunc 'modf'>, 'multiply': <ufunc 'multiply'>, 'negative': <ufunc 'negative'>, 'nextafter': <ufunc 'nextafter'>, 'not_equal': <ufunc 'not_equal'>, 'positive': <ufunc 'positive'>, 'power': <ufunc 'power'>, 'rad2deg': <ufunc 'rad2deg'>, 'radians': <ufunc 'radians'>, 'reciprocal': <ufunc 'reciprocal'>, 'remainder': <ufunc 'remainder'>, 'right_shift': <ufunc 'right_shift'>, 'rint': <ufunc 'rint'>, 'sign': <ufunc 'sign'>, 'signbit': <ufunc 'signbit'>, 'sin': <ufunc 'sin'>, 'sinh': <ufunc 'sinh'>, 'spacing': <ufunc 'spacing'>, 'sqrt': <ufunc 'sqrt'>, 'square': <ufunc 'square'>, 'subtract': <ufunc 'subtract'>, 'tan': <ufunc 'tan'>, 'tanh': <ufunc 'tanh'>, 'true_divide': <ufunc 'true_divide'>, 'trunc': <ufunc 'trunc'>, 'pi': 3.141592653589793, 'e': 2.718281828459045, 'euler_gamma': 0.5772156649015329, 'ERR_IGNORE': 0, 'ERR_WARN': 1, 'ERR_CALL': 3, 'ERR_RAISE': 2, 'ERR_PRINT': 4, 'ERR_LOG': 5, 'ERR_DEFAULT': 521, 'SHIFT_DIVIDEBYZERO': 0, 'SHIFT_OVERFLOW': 3, 'SHIFT_UNDERFLOW': 6, 'SHIFT_INVALID': 9, 'FPE_DIVIDEBYZERO': 1, 'FPE_OVERFLOW': 2, 'FPE_UNDERFLOW': 4, 'FPE_INVALID': 8, 'FLOATING_POINT_SUPPORT': 1, 'UFUNC_PYVALS_NAME': 'UFUNC_PYVALS', 'UFUNC_BUFSIZE_DEFAULT': 8192, 'PINF': inf, 'NINF': -inf, 'PZERO': 0.0, 'NZERO': -0.0, 'NAN': nan, 'divide': <ufunc 'true_divide'>, 'conj': <ufunc 'conjugate'>, 'mod': <ufunc 'remainder'>, 'sctypeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'sctypeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'typeDict': {'?': <class 'numpy.bool_'>, 0: <class 'numpy.bool_'>, 'byte': <class 'numpy.int8'>, 'b': <class 'numpy.int8'>, 1: <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'B': <class 'numpy.uint8'>, 2: <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'h': <class 'numpy.int16'>, 3: <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'H': <class 'numpy.uint16'>, 4: <class 'numpy.uint16'>, 'i': <class 'numpy.int32'>, 5: <class 'numpy.int32'>, 'uint': <class 'numpy.uint64'>, 'I': <class 'numpy.uint32'>, 6: <class 'numpy.uint32'>, 'intp': <class 'numpy.int64'>, 'p': <class 'numpy.int64'>, 7: <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'P': <class 'numpy.uint64'>, 8: <class 'numpy.uint64'>, 'long': <class 'numpy.int64'>, 'l': <class 'numpy.int64'>, 'L': <class 'numpy.uint64'>, 'longlong': <class 'numpy.int64'>, 'q': <class 'numpy.int64'>, 9: <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'Q': <class 'numpy.uint64'>, 10: <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'e': <class 'numpy.float16'>, 23: <class 'numpy.float16'>, 'f': <class 'numpy.float32'>, 11: <class 'numpy.float32'>, 'double': <class 'numpy.float64'>, 'd': <class 'numpy.float64'>, 12: <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'g': <class 'numpy.float128'>, 13: <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'F': <class 'numpy.complex64'>, 14: <class 'numpy.complex64'>, 'cdouble': <class 'numpy.complex128'>, 'D': <class 'numpy.complex128'>, 15: <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'G': <class 'numpy.complex256'>, 16: <class 'numpy.complex256'>, 'O': <class 'numpy.object_'>, 17: <class 'numpy.object_'>, 'S': <class 'numpy.bytes_'>, 18: <class 'numpy.bytes_'>, 'unicode': <class 'numpy.str_'>, 'U': <class 'numpy.str_'>, 19: <class 'numpy.str_'>, 'void': <class 'numpy.void'>, 'V': <class 'numpy.void'>, 20: <class 'numpy.void'>, 'M': <class 'numpy.datetime64'>, 21: <class 'numpy.datetime64'>, 'm': <class 'numpy.timedelta64'>, 22: <class 'numpy.timedelta64'>, 'bool8': <class 'numpy.bool_'>, 'Bool': <class 'numpy.bool_'>, 'b1': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'Float16': <class 'numpy.float16'>, 'f2': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'Float32': <class 'numpy.float32'>, 'f4': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'Float64': <class 'numpy.float64'>, 'f8': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'Float128': <class 'numpy.float128'>, 'f16': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'Complex32': <class 'numpy.complex64'>, 'c8': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'Complex64': <class 'numpy.complex128'>, 'c16': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'Complex128': <class 'numpy.complex256'>, 'c32': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'Object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'Bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'Str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'Void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'Datetime64': <class 'numpy.datetime64'>, 'M8': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'Timedelta64': <class 'numpy.timedelta64'>, 'm8': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'int': <class 'numpy.int64'>, 'float': <class 'numpy.float64'>, 'complex': <class 'numpy.complex128'>, 'bool': <class 'numpy.bool_'>, 'object': <class 'numpy.object_'>, 'str': <class 'numpy.str_'>, 'bytes': <class 'numpy.bytes_'>, 'a': <class 'numpy.bytes_'>}, 'typeNA': {'Bool': <class 'numpy.bool_'>, <class 'numpy.bool_'>: 'Bool', '?': 'Bool', 'b1': 'Bool', 'Float16': <class 'numpy.float16'>, <class 'numpy.float16'>: 'Float16', 'e': 'Float16', 'f2': 'Float16', 'Float32': <class 'numpy.float32'>, <class 'numpy.float32'>: 'Float32', 'f': 'Float32', 'f4': 'Float32', 'Float64': <class 'numpy.float64'>, <class 'numpy.float64'>: 'Float64', 'd': 'Float64', 'f8': 'Float64', 'Float128': <class 'numpy.float128'>, <class 'numpy.float128'>: 'Float128', 'g': 'Float128', 'f16': 'Float128', 'Complex32': <class 'numpy.complex64'>, <class 'numpy.complex64'>: 'Complex32', 'F': 'Complex32', 'c8': 'Complex32', 'Complex64': <class 'numpy.complex128'>, <class 'numpy.complex128'>: 'Complex64', 'D': 'Complex64', 'c16': 'Complex64', 'Complex128': <class 'numpy.complex256'>, <class 'numpy.complex256'>: 'Complex128', 'G': 'Complex128', 'c32': 'Complex128', 'Object0': <class 'numpy.object_'>, <class 'numpy.object_'>: 'Object0', 'O': 'Object0', 'Bytes0': <class 'numpy.bytes_'>, <class 'numpy.bytes_'>: 'Bytes0', 'S': 'Bytes0', 'Str0': <class 'numpy.str_'>, <class 'numpy.str_'>: 'Str0', 'U': 'Str0', 'Void0': <class 'numpy.void'>, <class 'numpy.void'>: 'Void0', 'V': 'Void0', 'Datetime64': <class 'numpy.datetime64'>, <class 'numpy.datetime64'>: 'Datetime64', 'M': 'Datetime64', 'M8': 'Datetime64', 'Timedelta64': <class 'numpy.timedelta64'>, <class 'numpy.timedelta64'>: 'Timedelta64', 'm': 'Timedelta64', 'm8': 'Timedelta64', 'Int64': <class 'numpy.int64'>, 'UInt64': <class 'numpy.uint64'>, 'i8': <class 'numpy.int64'>, 'u8': <class 'numpy.uint64'>, <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'l': 'Int64', 'L': 'UInt64', <class 'numpy.int64'>: 'Int64', <class 'numpy.uint64'>: 'UInt64', 'q': 'Int64', 'Q': 'UInt64', 'Int32': <class 'numpy.int32'>, 'UInt32': <class 'numpy.uint32'>, 'i4': <class 'numpy.int32'>, 'u4': <class 'numpy.uint32'>, <class 'numpy.int32'>: 'Int32', <class 'numpy.uint32'>: 'UInt32', 'i': 'Int32', 'I': 'UInt32', 'Int16': <class 'numpy.int16'>, 'UInt16': <class 'numpy.uint16'>, 'i2': <class 'numpy.int16'>, 'u2': <class 'numpy.uint16'>, <class 'numpy.int16'>: 'Int16', <class 'numpy.uint16'>: 'UInt16', 'h': 'Int16', 'H': 'UInt16', 'Int8': <class 'numpy.int8'>, 'UInt8': <class 'numpy.uint8'>, 'i1': <class 'numpy.int8'>, 'u1': <class 'numpy.uint8'>, <class 'numpy.int8'>: 'Int8', <class 'numpy.uint8'>: 'UInt8', 'b': 'Int8', 'B': 'UInt8'}, 'sctypes': {'int': [<class 'numpy.int8'>, <class 'numpy.int16'>, <class 'numpy.int32'>, <class 'numpy.int64'>], 'uint': [<class 'numpy.uint8'>, <class 'numpy.uint16'>, <class 'numpy.uint32'>, <class 'numpy.uint64'>], 'float': [<class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>], 'complex': [<class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>], 'others': [<class 'bool'>, <class 'object'>, <class 'bytes'>, <class 'str'>, <class 'numpy.void'>]}, 'ScalarType': (<class 'int'>, <class 'float'>, <class 'complex'>, <class 'int'>, <class 'bool'>, <class 'bytes'>, <class 'str'>, <class 'memoryview'>, <class 'numpy.bool_'>, <class 'numpy.int8'>, <class 'numpy.uint8'>, <class 'numpy.int16'>, <class 'numpy.uint16'>, <class 'numpy.int32'>, <class 'numpy.uint32'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.int64'>, <class 'numpy.uint64'>, <class 'numpy.float16'>, <class 'numpy.float32'>, <class 'numpy.float64'>, <class 'numpy.float128'>, <class 'numpy.complex64'>, <class 'numpy.complex128'>, <class 'numpy.complex256'>, <class 'numpy.object_'>, <class 'numpy.bytes_'>, <class 'numpy.str_'>, <class 'numpy.void'>, <class 'numpy.datetime64'>, <class 'numpy.timedelta64'>), 'obj2sctype': <function obj2sctype at 0x7f68d011f048>, 'cast': {<class 'numpy.bool_'>: <function <lambda> at 0x7f68d011f400>, <class 'numpy.int8'>: <function <lambda> at 0x7f68d011f488>, <class 'numpy.uint8'>: <function <lambda> at 0x7f68d011f510>, <class 'numpy.int16'>: <function <lambda> at 0x7f68d011f598>, <class 'numpy.uint16'>: <function <lambda> at 0x7f68d011f620>, <class 'numpy.int32'>: <function <lambda> at 0x7f68d011f6a8>, <class 'numpy.uint32'>: <function <lambda> at 0x7f68d011f730>, <class 'numpy.int64'>: <function <lambda> at 0x7f68d011f7b8>, <class 'numpy.uint64'>: <function <lambda> at 0x7f68d011f840>, <class 'numpy.int64'>: <function <lambda> at 0x7f68d011f8c8>, <class 'numpy.uint64'>: <function <lambda> at 0x7f68d011f950>, <class 'numpy.float16'>: <function <lambda> at 0x7f68d011f9d8>, <class 'numpy.float32'>: <function <lambda> at 0x7f68d011fa60>, <class 'numpy.float64'>: <function <lambda> at 0x7f68d011fae8>, <class 'numpy.float128'>: <function <lambda> at 0x7f68d011fb70>, <class 'numpy.complex64'>: <function <lambda> at 0x7f68d011fbf8>, <class 'numpy.complex128'>: <function <lambda> at 0x7f68d011fc80>, <class 'numpy.complex256'>: <function <lambda> at 0x7f68d011fd08>, <class 'numpy.object_'>: <function <lambda> at 0x7f68d011fd90>, <class 'numpy.bytes_'>: <function <lambda> at 0x7f68d011fe18>, <class 'numpy.str_'>: <function <lambda> at 0x7f68d011fea0>, <class 'numpy.void'>: <function <lambda> at 0x7f68d011ff28>, <class 'numpy.datetime64'>: <function <lambda> at 0x7f68d0121048>, <class 'numpy.timedelta64'>: <function <lambda> at 0x7f68d01210d0>}, 'nbytes': {<class 'numpy.bool_'>: 1, <class 'numpy.int8'>: 1, <class 'numpy.uint8'>: 1, <class 'numpy.int16'>: 2, <class 'numpy.uint16'>: 2, <class 'numpy.int32'>: 4, <class 'numpy.uint32'>: 4, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.int64'>: 8, <class 'numpy.uint64'>: 8, <class 'numpy.float16'>: 2, <class 'numpy.float32'>: 4, <class 'numpy.float64'>: 8, <class 'numpy.float128'>: 16, <class 'numpy.complex64'>: 8, <class 'numpy.complex128'>: 16, <class 'numpy.complex256'>: 32, <class 'numpy.object_'>: 8, <class 'numpy.bytes_'>: 0, <class 'numpy.str_'>: 0, <class 'numpy.void'>: 0, <class 'numpy.datetime64'>: 8, <class 'numpy.timedelta64'>: 8}, 'sctype2char': <function sctype2char at 0x7f68d011f378>, 'maximum_sctype': <function maximum_sctype at 0x7f68d0119ea0>, 'issctype': <function issctype at 0x7f68d0119f28>, 'typecodes': {'Character': 'c', 'Integer': 'bhilqp', 'UnsignedInteger': 'BHILQP', 'Float': 'efdg', 'Complex': 'FDG', 'AllInteger': 'bBhHiIlLqQpP', 'AllFloat': 'efdgFDG', 'Datetime': 'Mm', 'All': '?bhilqpBHILQPefdgFDGSUVOMm'}, 'find_common_type': <function find_common_type at 0x7f68d0113a60>, 'issubdtype': <function issubdtype at 0x7f68d011f1e0>, 'datetime_data': <built-in function datetime_data>, 'datetime_as_string': <built-in function datetime_as_string>, 'busday_offset': <built-in function busday_offset>, 'busday_count': <built-in function busday_count>, 'is_busday': <built-in function is_busday>, 'busdaycalendar': <class 'numpy.busdaycalendar'>, 'byte': <class 'numpy.int8'>, 'ubyte': <class 'numpy.uint8'>, 'short': <class 'numpy.int16'>, 'ushort': <class 'numpy.uint16'>, 'uint': <class 'numpy.uint64'>, 'intp': <class 'numpy.int64'>, 'uintp': <class 'numpy.uint64'>, 'long': <class 'int'>, 'longlong': <class 'numpy.int64'>, 'ulonglong': <class 'numpy.uint64'>, 'half': <class 'numpy.float16'>, 'double': <class 'numpy.float64'>, 'longdouble': <class 'numpy.float128'>, 'cfloat': <class 'numpy.complex128'>, 'cdouble': <class 'numpy.complex128'>, 'clongdouble': <class 'numpy.complex256'>, 'unicode': <class 'str'>, 'void': <class 'numpy.void'>, 'generic': <class 'numpy.generic'>, 'number': <class 'numpy.number'>, 'integer': <class 'numpy.integer'>, 'inexact': <class 'numpy.inexact'>, 'signedinteger': <class 'numpy.signedinteger'>, 'unsignedinteger': <class 'numpy.unsignedinteger'>, 'floating': <class 'numpy.floating'>, 'complexfloating': <class 'numpy.complexfloating'>, 'flexible': <class 'numpy.flexible'>, 'character': <class 'numpy.character'>, 'bool8': <class 'numpy.bool_'>, 'float16': <class 'numpy.float16'>, 'float32': <class 'numpy.float32'>, 'float64': <class 'numpy.float64'>, 'float128': <class 'numpy.float128'>, 'complex64': <class 'numpy.complex64'>, 'complex128': <class 'numpy.complex128'>, 'complex256': <class 'numpy.complex256'>, 'object0': <class 'numpy.object_'>, 'bytes0': <class 'numpy.bytes_'>, 'str0': <class 'numpy.str_'>, 'void0': <class 'numpy.void'>, 'datetime64': <class 'numpy.datetime64'>, 'timedelta64': <class 'numpy.timedelta64'>, 'int64': <class 'numpy.int64'>, 'uint64': <class 'numpy.uint64'>, 'int32': <class 'numpy.int32'>, 'uint32': <class 'numpy.uint32'>, 'int16': <class 'numpy.int16'>, 'uint16': <class 'numpy.uint16'>, 'int8': <class 'numpy.int8'>, 'uint8': <class 'numpy.uint8'>, 'complex_': <class 'numpy.complex128'>, 'int0': <class 'numpy.int64'>, 'uint0': <class 'numpy.uint64'>, 'single': <class 'numpy.float32'>, 'csingle': <class 'numpy.complex64'>, 'singlecomplex': <class 'numpy.complex64'>, 'float_': <class 'numpy.float64'>, 'intc': <class 'numpy.int32'>, 'uintc': <class 'numpy.uint32'>, 'int_': <class 'numpy.int64'>, 'longfloat': <class 'numpy.float128'>, 'clongfloat': <class 'numpy.complex256'>, 'longcomplex': <class 'numpy.complex256'>, 'bool_': <class 'numpy.bool_'>, 'unicode_': <class 'numpy.str_'>, 'object_': <class 'numpy.object_'>, 'bytes_': <class 'numpy.bytes_'>, 'str_': <class 'numpy.str_'>, 'string_': <class 'numpy.bytes_'>, 'array2string': <function array2string at 0x7f68d00bebf8>, 'array_str': <function array_str at 0x7f68d00d5048>, 'array_repr': <function array_repr at 0x7f68d00d1f28>, 'set_string_function': <function set_string_function at 0x7f68d00d50d0>, 'set_printoptions': <function set_printoptions at 0x7f68d00be730>, 'get_printoptions': <function get_printoptions at 0x7f68d00be7b8>, 'format_float_positional': <function format_float_positional at 0x7f68d00d1268>, 'format_float_scientific': <function format_float_scientific at 0x7f68d00beea0>, 'record': <class 'numpy.record'>, 'recarray': <class 'numpy.recarray'>, 'format_parser': <class 'numpy.core.records.format_parser'>, 'chararray': <class 'numpy.core.defchararray.chararray'>, 'logspace': <function logspace at 0x7f68d00751e0>, 'linspace': <function linspace at 0x7f68d0075158>, 'geomspace': <function geomspace at 0x7f68d0075268>, 'MachAr': <class 'numpy.core.machar.MachAr'>, 'finfo': <class 'numpy.core.getlimits.finfo'>, 'iinfo': <class 'numpy.core.getlimits.iinfo'>, 'atleast_1d': <function atleast_1d at 0x7f68d007f048>, 'atleast_2d': <function atleast_2d at 0x7f68d007f598>, 'atleast_3d': <function atleast_3d at 0x7f68d007f620>, 'block': <function block at 0x7f68d007f950>, 'hstack': <function hstack at 0x7f68d007f730>, 'stack': <function stack at 0x7f68d007f7b8>, 'vstack': <function vstack at 0x7f68d007f6a8>, 'einsum': <function einsum at 0x7f68d007fe18>, 'einsum_path': <function einsum_path at 0x7f68d007fd90>, 'matrix': <class 'numpy.matrixlib.defmatrix.matrix'>, 'bmat': <function bmat at 0x7f68cb7908c8>, 'mat': <function asmatrix at 0x7f68cb78a598>, 'asmatrix': <function asmatrix at 0x7f68cb78a598>, 'emath': <module 'numpy.lib.scimath' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/lib/scimath.py'>, 'math': <module 'math' (built-in)>, 'tracemalloc_domain': 389047, 'iscomplexobj': <function iscomplexobj at 0x7f68cb7ea9d8>, 'isrealobj': <function isrealobj at 0x7f68cb7eaa60>, 'imag': <function imag at 0x7f68cb7ea840>, 'iscomplex': <function iscomplex at 0x7f68cb7ea8c8>, 'isreal': <function isreal at 0x7f68cb7ea950>, 'nan_to_num': <function nan_to_num at 0x7f68cb7eab70>, 'real': <function real at 0x7f68cb7ea7b8>, 'real_if_close': <function real_if_close at 0x7f68cb7eabf8>, 'typename': <function typename at 0x7f68cb7ead08>, 'asfarray': <function asfarray at 0x7f68cb7ea730>, 'mintypecode': <function mintypecode at 0x7f68d0c1bd08>, 'asscalar': <function asscalar at 0x7f68cb7eac80>, 'common_type': <function common_type at 0x7f68cb7ead90>, 'ravel_multi_index': <built-in function ravel_multi_index>, 'unravel_index': <built-in function unravel_index>, 'mgrid': <numpy.lib.index_tricks.nd_grid object at 0x7f68cb7ed198>, 'ogrid': <numpy.lib.index_tricks.nd_grid object at 0x7f68cb7ed208>, 'r_': <numpy.lib.index_tricks.RClass object at 0x7f68cb793320>, 'c_': <numpy.lib.index_tricks.CClass object at 0x7f68cb793390>, 's_': <numpy.lib.index_tricks.IndexExpression object at 0x7f68cb7934a8>, 'index_exp': <numpy.lib.index_tricks.IndexExpression object at 0x7f68cb793470>, 'ix_': <function ix_ at 0x7f68cb7eaf28>, 'ndenumerate': <class 'numpy.lib.index_tricks.ndenumerate'>, 'ndindex': <class 'numpy.lib.index_tricks.ndindex'>, 'fill_diagonal': <function fill_diagonal at 0x7f68cb790d90>, 'diag_indices': <function diag_indices at 0x7f68cb7977b8>, 'diag_indices_from': <function diag_indices_from at 0x7f68cb797840>, 'select': <function select at 0x7f68cb7888c8>, 'piecewise': <function piecewise at 0x7f68cb788840>, 'trim_zeros': <function trim_zeros at 0x7f68cb788d08>, 'copy': <function copy at 0x7f68cb788950>, 'iterable': <function iterable at 0x7f68cb7881e0>, 'percentile': <function percentile at 0x7f68cb789ea0>, 'diff': <function diff at 0x7f68cb788a60>, 'gradient': <function gradient at 0x7f68cb7889d8>, 'angle': <function angle at 0x7f68cb788b70>, 'unwrap': <function unwrap at 0x7f68cb788bf8>, 'sort_complex': <function sort_complex at 0x7f68cb788c80>, 'disp': <function disp at 0x7f68cb789048>, 'flip': <function flip at 0x7f68cb788158>, 'rot90': <function rot90 at 0x7f68cb7f8730>, 'extract': <function extract at 0x7f68cb788ea0>, 'place': <function place at 0x7f68cb788f28>, 'vectorize': <class 'numpy.lib.function_base.vectorize'>, 'asarray_chkfinite': <function asarray_chkfinite at 0x7f68cb7887b8>, 'average': <function average at 0x7f68cb788730>, 'histogram': <function histogram at 0x7f68cb788620>, 'histogramdd': <function histogramdd at 0x7f68cb7886a8>, 'bincount': <built-in function bincount>, 'digitize': <built-in function digitize>, 'cov': <function cov at 0x7f68cb789378>, 'corrcoef': <function corrcoef at 0x7f68cb7896a8>, 'msort': <function msort at 0x7f68cb789c80>, 'median': <function median at 0x7f68cb789d90>, 'sinc': <function sinc at 0x7f68cb789bf8>, 'hamming': <function hamming at 0x7f68cb7898c8>, 'hanning': <function hanning at 0x7f68cb789840>, 'bartlett': <function bartlett at 0x7f68cb7897b8>, 'blackman': <function blackman at 0x7f68cb789730>, 'kaiser': <function kaiser at 0x7f68cb789b70>, 'trapz': <function trapz at 0x7f68cb78a048>, 'i0': <function i0 at 0x7f68cb789ae8>, 'add_newdoc': <function add_newdoc at 0x7f68cb78a0d0>, 'add_docstring': <built-in function add_docstring>, 'meshgrid': <function meshgrid at 0x7f68cb78a158>, 'delete': <function delete at 0x7f68cb78a1e0>, 'insert': <function insert at 0x7f68cb78a268>, 'append': <function append at 0x7f68cb78a2f0>, 'interp': <function interp at 0x7f68cb788ae8>, 'add_newdoc_ufunc': <built-in function _add_newdoc_ufunc>, 'column_stack': <function column_stack at 0x7f68cb7a5620>, 'row_stack': <function vstack at 0x7f68d007f6a8>, 'dstack': <function dstack at 0x7f68cb7a56a8>, 'array_split': <function array_split at 0x7f68cb7a57b8>, 'split': <function split at 0x7f68cb7a5840>, 'hsplit': <function hsplit at 0x7f68cb7a58c8>, 'vsplit': <function vsplit at 0x7f68cb7a5950>, 'dsplit': <function dsplit at 0x7f68cb7a59d8>, 'apply_over_axes': <function apply_over_axes at 0x7f68cb7a5510>, 'expand_dims': <function expand_dims at 0x7f68cb7a5598>, 'apply_along_axis': <function apply_along_axis at 0x7f68cb7a5488>, 'kron': <function kron at 0x7f68cb7a5b70>, 'tile': <function tile at 0x7f68cb7a5bf8>, 'get_array_wrap': <function get_array_wrap at 0x7f68cb7a5ae8>, 'broadcast_to': <function broadcast_to at 0x7f68cb790bf8>, 'broadcast_arrays': <function broadcast_arrays at 0x7f68cb790d08>, 'diag': <function diag at 0x7f68cb7f8a60>, 'diagflat': <function diagflat at 0x7f68cb7f8ae8>, 'eye': <function eye at 0x7f68cb7f89d8>, 'fliplr': <function fliplr at 0x7f68cb7f88c8>, 'flipud': <function flipud at 0x7f68cb7f8950>, 'tri': <function tri at 0x7f68cb7f8b70>, 'triu': <function triu at 0x7f68cb7f8c80>, 'tril': <function tril at 0x7f68cb7f8bf8>, 'vander': <function vander at 0x7f68cb7f8d08>, 'histogram2d': <function histogram2d at 0x7f68cb7f8d90>, 'mask_indices': <function mask_indices at 0x7f68cb7f8e18>, 'tril_indices': <function tril_indices at 0x7f68cb7f8ea0>, 'tril_indices_from': <function tril_indices_from at 0x7f68cb7f8f28>, 'triu_indices': <function triu_indices at 0x7f68cb788048>, 'triu_indices_from': <function triu_indices_from at 0x7f68cb7880d0>, 'fix': <function fix at 0x7f68cb7ea488>, 'isneginf': <function isneginf at 0x7f68cb7ea6a8>, 'isposinf': <function isposinf at 0x7f68cb7ea598>, 'pad': <function pad at 0x7f68cae81bf8>, 'poly': <function poly at 0x7f68cb7ad510>, 'roots': <function roots at 0x7f68cb7ad620>, 'polyint': <function polyint at 0x7f68cb7c32f0>, 'polyder': <function polyder at 0x7f68cb7c3378>, 'polyadd': <function polyadd at 0x7f68cb7c3510>, 'polysub': <function polysub at 0x7f68cb7c3598>, 'polymul': <function polymul at 0x7f68cb7c3620>, 'polydiv': <function polydiv at 0x7f68cb7c36a8>, 'polyval': <function polyval at 0x7f68cb7c3488>, 'poly1d': <class 'numpy.lib.polynomial.poly1d'>, 'polyfit': <function polyfit at 0x7f68cb7c3400>, 'RankWarning': <class 'numpy.lib.polynomial.RankWarning'>, 'issubclass_': <function issubclass_ at 0x7f68d011f0d0>, 'issubsctype': <function issubsctype at 0x7f68d011f158>, 'deprecate': <function deprecate at 0x7f68cb7c9840>, 'deprecate_with_doc': <function <lambda> at 0x7f68cb7c9a60>, 'get_include': <function get_include at 0x7f68cb7c9730>, 'info': <function info at 0x7f68cb7c9d90>, 'source': <function source at 0x7f68cb7c9e18>, 'who': <function who at 0x7f68cb7c9b70>, 'lookfor': <function lookfor at 0x7f68cb7c9ea0>, 'byte_bounds': <function byte_bounds at 0x7f68cb7c9ae8>, 'safe_eval': <function safe_eval at 0x7f68cb7e20d0>, 'ediff1d': <function ediff1d at 0x7f68cb7c37b8>, 'intersect1d': <function intersect1d at 0x7f68cb3189d8>, 'setxor1d': <function setxor1d at 0x7f68cb318a60>, 'union1d': <function union1d at 0x7f68cb318bf8>, 'setdiff1d': <function setdiff1d at 0x7f68cb318c80>, 'unique': <function unique at 0x7f68cb3188c8>, 'in1d': <function in1d at 0x7f68cb318ae8>, 'isin': <function isin at 0x7f68cb318b70>, 'savetxt': <function savetxt at 0x7f68cb34cae8>, 'loadtxt': <function loadtxt at 0x7f68cb34ca60>, 'genfromtxt': <function genfromtxt at 0x7f68cb34cbf8>, 'ndfromtxt': <function ndfromtxt at 0x7f68cb34cc80>, 'mafromtxt': <function mafromtxt at 0x7f68cb34cd08>, 'recfromtxt': <function recfromtxt at 0x7f68cb34cd90>, 'recfromcsv': <function recfromcsv at 0x7f68cb34ce18>, 'save': <function save at 0x7f68cb34c7b8>, 'savez': <function savez at 0x7f68cb34c840>, 'savez_compressed': <function savez_compressed at 0x7f68cb34c8c8>, 'packbits': <built-in function packbits>, 'unpackbits': <built-in function unpackbits>, 'fromregex': <function fromregex at 0x7f68cb34cb70>, 'DataSource': <class 'numpy.lib._datasource.DataSource'>, 'fv': <function fv at 0x7f68cb350048>, 'pmt': <function pmt at 0x7f68cb350620>, 'nper': <function nper at 0x7f68cb3506a8>, 'ipmt': <function ipmt at 0x7f68cb350730>, 'ppmt': <function ppmt at 0x7f68cb350840>, 'pv': <function pv at 0x7f68cb3508c8>, 'rate': <function rate at 0x7f68cb3509d8>, 'irr': <function irr at 0x7f68cb350a60>, 'npv': <function npv at 0x7f68cb350ae8>, 'mirr': <function mirr at 0x7f68cb350b70>, 'nansum': <function nansum at 0x7f68cb79cb70>, 'nanmax': <function nanmax at 0x7f68cb79c9d8>, 'nanmin': <function nanmin at 0x7f68cb79c950>, 'nanargmax': <function nanargmax at 0x7f68cb79cae8>, 'nanargmin': <function nanargmin at 0x7f68cb79ca60>, 'nanmean': <function nanmean at 0x7f68cb79cd90>, 'nanmedian': <function nanmedian at 0x7f68cb7a5048>, 'nanpercentile': <function nanpercentile at 0x7f68cb7a50d0>, 'nanvar': <function nanvar at 0x7f68cb7a5268>, 'nanstd': <function nanstd at 0x7f68cb7a52f0>, 'nanprod': <function nanprod at 0x7f68cb79cbf8>, 'nancumsum': <function nancumsum at 0x7f68cb79cc80>, 'nancumprod': <function nancumprod at 0x7f68cb79cd08>, 'linalg': <module 'numpy.linalg' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/linalg/__init__.py'>, 'fft': <module 'numpy.fft' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/fft/__init__.py'>, 'random': <module 'numpy.random' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/random/__init__.py'>, 'ctypeslib': <module 'numpy.ctypeslib' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ctypeslib.py'>, 'ma': <module 'numpy.ma' from '/usr/local/anaconda3/lib/python3.6/site-packages/numpy/ma/__init__.py'>}
>>> import sys
>>> sys.path.append('sys.path.append('/usr/local/anaconda3/lib/python3.6/site-packages')

SyntaxError: invalid syntax
>>> from numpy import cos, linspace
		    
>>> x
		    
Traceback (most recent call last):
  File "<pyshell#8>", line 1, in <module>
    x
NameError: name 'x' is not defined
>>> print(plt.plot.__doc__)
		    
Traceback (most recent call last):
  File "<pyshell#9>", line 1, in <module>
    print(plt.plot.__doc__)
NameError: name 'plt' is not defined
>>> 
========================= RESTART: /home/user/1B1.py =========================

Warning (from warnings module):
  File "/usr/local/anaconda3/lib/python3.6/site-packages/matplotlib/font_manager.py", line 281
    'Matplotlib is building the font cache using fc-list. '
UserWarning: Matplotlib is building the font cache using fc-list. This may take a moment.
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
Traceback (most recent call last):
  File "/home/user/1B1.py", line 27, in <module>
    plt.legen(['$cos(x)$', '$sin(x)$', '$cos(x)$', 'sin(x)'])
AttributeError: module 'matplotlib.pyplot' has no attribute 'legen'
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
Traceback (most recent call last):
  File "/home/user/1B1.py", line 16, in <module>
    plt.plot(x, y1, color = '#FFFF00')
NameError: name 'y1' is not defined
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
========================= RESTART: /home/user/1B1.py =========================
>>> 
